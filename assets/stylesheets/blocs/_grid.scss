.major-grid {
  display: grid;
  grid-template-columns: 1rem auto 1rem;
  grid-template-rows: 5rem auto auto;
  grid-template-areas:
    "header header header"
    "main main main"
    "footer footer footer";
  grid-gap: 3rem 1rem;
  h1 {
    grid-area: header;
  }

  .footer {
    grid-area: footer;
    display: grid;
    grid-template-columns: 10rem minmax(max-content, 5rem) 1fr minmax(max-content, 5rem) 10rem;
    grid-template-rows: auto;
    grid-gap: 1rem;
    align-items: center;
    p {
      grid-area: 1 / 3 / 2 / 4;
    }
    a {
      grid-area: 1 / 4 / 2 / 5;

      font-size: 0.9rem;
      text-transform: uppercase;
      letter-spacing: 0.2em;
      line-height: 1.6;
      font-weight: 600;
      &:hover {
        text-decoration: none;
        color: $black;
       }
    }
  }

  p {
    grid-area: footer;
    font-size: 1rem;
    line-height: 140%;
  }

  @include desktop {
    grid-template-columns: 10rem auto 10rem;
  }
}

.grid-1 {
  grid-column-start: 2;
  grid-column-end: 3;
  grid-row-start: 2;
  grid-row-end: 3;

  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(6, 9rem);
  grid-gap: 1rem;

  @include desktop {
    grid-template-columns: repeat(3, 1fr) 2fr;
    grid-template-rows: 8.5rem 6rem 8rem 7rem;
  }

  div {
    border: solid $dark 2px;
    font-size: 1.2rem;
    text-align: left;
    padding: 0.5rem;
    p {
      color: rgba($white, 0.9);
      font-weight: bold;
      &+p {
        color: rgba($white, 0.7);
        font-weight: normal;
      }
    }
  }

  .item-a {
    grid-column-start: 1;
    grid-column-end: 3;
    grid-row-start: 1;
    grid-row-end: 2;

    @include desktop {
      grid-column-start: 1;
      grid-column-end: 5;
      grid-row-start: 1;
      grid-row-end: 2;
    }
  }

  .item-b {
    // grid-column-start + grid-column-end
    grid-column: 1 / 2;
    // grid-row-start + grid-row-end
    grid-row: 2 / 3;
    @include desktop {
      grid-column: 1 / 4;
      grid-row-start: 2 / 3;
    }
  }

  .item-c {
    grid-column: 1 / 2;
    // grid-row-start + how many rows it takes
    grid-row: 5 / span 2;
    @include desktop {
      grid-column: 4 / 5;
      // grid-row-start + how many rows it takes
      grid-row: 2 / span 2;
    }
  }

  .item-d {
    grid-column: 1 / 3;
    grid-row: 3 / span 2;
    @include desktop {
      grid-column: 1 / 3;
      grid-row: 3 / 5;
    }
  }

  .item-e {
    // grid-row-start + grid-column-start + grid-row-end + grid-column-end
    grid-area: 5 / 2 / 7 / 3;
    @include desktop {
      grid-area: 3 / 3 / 5 / 4;
    }
  }

  .item-f {
    grid-column-start: 2;
    grid-column-end: 3;
    grid-row-start: 2;
    grid-row-end: 3;
    @include desktop {
      grid-area: 4 / 4 / 5 / 5;
    }
  }
}
